(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{419:function(t,e,r){"use strict";r.r(e);var s=r(21),a=Object(s.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"第5章-补充"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第5章-补充"}},[t._v("#")]),t._v(" 第5章 补充")]),t._v(" "),r("h2",{attrs:{id:"基于-bip-32-和-bip-39-规范生成-hd-钱包-分层确定性钱包"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#基于-bip-32-和-bip-39-规范生成-hd-钱包-分层确定性钱包"}},[t._v("#")]),t._v(" 基于 BIP-32 和 BIP-39 规范生成 HD 钱包（分层确定性钱包）")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://stevenocean.github.io/2018/09/23/generate-hd-wallet-by-bip39.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("基于 BIP-32 和 BIP-39 规范生成 HD 钱包（分层确定性钱包） | 未来边缘"),r("OutboundLink")],1)]),t._v(" "),r("h3",{attrs:{id:"关于-bitcoin-的钱包"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#关于-bitcoin-的钱包"}},[t._v("#")]),t._v(" 关于 Bitcoin 的钱包")]),t._v(" "),r("p",[t._v("在 Bitcoin 中有两种主要类型的钱包，分别为：")]),t._v(" "),r("ol",[r("li",[r("strong",[t._v("非确定性钱包（Nodeterministic Wallet）")]),t._v("：该钱包中的每个密钥都是从不同的随机数独立生成的，密钥彼此之间没有任何关系，这种钱包也被称为 JBOK 钱包（Just a Bunch Of Keys）；")]),t._v(" "),r("li",[r("strong",[t._v("确定性钱包（Deterministic Wallet）")]),t._v("：其中所有的密钥都是从一个主密钥派生出来的，这个主密钥就是种子（seed），在该类型的钱包中，所有的密钥之间都是相互关联的，如果有原始种子，就可以再次生成全部的密钥；在确定性钱包中，可以使用不同的密钥推导方式。目前最常用的推导方法是 树状结构，也称为 "),r("strong",[t._v("分层确定性钱包")]),t._v(" 或 "),r("strong",[t._v("HD 钱包")]),t._v("；")])]),t._v(" "),r("p",[t._v("我们文章的目的就是生成 "),r("strong",[t._v("HD 钱包")]),t._v("，"),r("strong",[t._v("HD 钱包")]),t._v(" 可以允许用户在不安全的服务器上使用，或者在每笔交易中使用不同的公钥。")]),t._v(" "),r("p",[t._v("涉及到钱包的一些常用标准规范有：")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[t._v("BIP-39"),r("OutboundLink")],1),t._v(": 助记词")]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0033.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[t._v("BIP-32"),r("OutboundLink")],1),t._v("：HD 钱包")]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0043.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[t._v("BIP-43"),r("OutboundLink")],1),t._v("：多用途 HD 钱包结构")]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[t._v("BIP-44"),r("OutboundLink")],1),t._v("：多币种和多账户钱包")])]),t._v(" "),r("p",[t._v("要生成钱包私钥，我们需要有个种子(seed)，而我们这里是通过助记词来生成的，下面我们就先了解一下如何基于 "),r("strong",[t._v("BIP-39")]),t._v(" 规范来生成助记词和种子(seed)。")]),t._v(" "),r("h3",{attrs:{id:"关于-bip-39"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#关于-bip-39"}},[t._v("#")]),t._v(" 关于 BIP-39")]),t._v(" "),r("p",[t._v("BIP-39 规范主要描述了基于助记词（一组便于记忆的单词）来生成确定性钱包的算法和过程。")]),t._v(" "),r("p",[t._v("该规范中主要由两部分构成：")]),t._v(" "),r("ol",[r("li",[t._v("如何生成助记词；")]),t._v(" "),r("li",[t._v("如何将生成的助记词转化成一个二进制种子；")])]),t._v(" "),r("p",[t._v("下面就先分别介绍这两个部分来看看如何生成确定性钱包。")]),t._v(" "),r("blockquote",[r("p",[t._v("后面涉及到一些示例代码都是采用的 python-mnemonic 库。")])]),t._v(" "),r("h3",{attrs:{id:"生成助记词"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#生成助记词"}},[t._v("#")]),t._v(" 生成助记词")]),t._v(" "),r("p",[t._v("生成助记词的算法过程如下图：")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://stevenocean.github.io/2018/09/23/generate-hd-wallet-by-bip39/generate-mnemonic-words.jpg",alt:""}})]),t._v(" "),r("p",[t._v("具体过程如下：")]),t._v(" "),r("ol",[r("li",[t._v("创建一个 128 到 256 位（步长 32 位）的随机序列（熵）；")])]),t._v(" "),r("blockquote",[r("p",[t._v("随机序列的长度称为 熵长，熵长按照步长 32 位，主要有几种分别为 [128, 160, 192, 224, 256]，我们示例图中是 128 位；")])]),t._v(" "),r("ol",{attrs:{start:"2"}},[r("li",[t._v("对上一步生成的随机序列进行 SHA256 生成 Hash 值，并取出该 Hash 值的前 N 位（熵长/32，如：128 位，则 N = 4）作为随机序列的校验和（Checksum）；")]),t._v(" "),r("li",[t._v("将 Checksum 添加至第一步生成的随机序列的尾部，此时对于图中示例加上 Checksum 之后为 128 + 4 = 132 位的随机序列；")]),t._v(" "),r("li",[t._v("将上一步的随机序列按照 11 位一段进行分隔(split)，这样对于 128 位熵长的序列就会生成 12 段（132/11=12）；")]),t._v(" "),r("li",[t._v("此时将每个包含 11 位部分的值与一个预定义的 2048 个单词的词典进行对应；")]),t._v(" "),r("li",[t._v("按照切割顺序生成了最终的单词组就是助记词；")])]),t._v(" "),r("p",[t._v("可以看到不同熵长对应的 Checksum 的长度，最终生成的助记词的长度不同，具体如下表：")]),t._v(" "),r("table",[r("thead",[r("tr",[r("th",[t._v("Entropy(bits)")]),t._v(" "),r("th",[t._v("Checksum(bits)")]),t._v(" "),r("th",[t._v("Entropy+Checksum(bits)")]),t._v(" "),r("th",[t._v("Mnemonic length(words)")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[t._v("128")]),t._v(" "),r("td",[t._v("4")]),t._v(" "),r("td",[t._v("132")]),t._v(" "),r("td",[t._v("12")])]),t._v(" "),r("tr",[r("td",[t._v("160")]),t._v(" "),r("td",[t._v("5")]),t._v(" "),r("td",[t._v("165")]),t._v(" "),r("td",[t._v("15")])]),t._v(" "),r("tr",[r("td",[t._v("192")]),t._v(" "),r("td",[t._v("6")]),t._v(" "),r("td",[t._v("198")]),t._v(" "),r("td",[t._v("18")])]),t._v(" "),r("tr",[r("td",[t._v("224")]),t._v(" "),r("td",[t._v("7")]),t._v(" "),r("td",[t._v("231")]),t._v(" "),r("td",[t._v("21")])]),t._v(" "),r("tr",[r("td",[t._v("256")]),t._v(" "),r("td",[t._v("8")]),t._v(" "),r("td",[t._v("264")]),t._v(" "),r("td",[t._v("24")])])])]),t._v(" "),r("blockquote",[r("p",[t._v("上面第 5 步涉及到单词表，理想的单词表应该满足智能选词、避免相似单词、排序单词表等特点，目前支持了多种"),r("a",{attrs:{href:"https://github.com/bitcoin/bips/tree/master/bip-0039",target:"_blank",rel:"noopener noreferrer"}},[t._v("不同国家的单词表"),r("OutboundLink")],1),t._v("。")])]),t._v(" "),r("p",[t._v("如下示例代码基于 128 位强度的熵长生成了 12 个助记词：")]),t._v(" "),r("div",{staticClass:"language-python line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-python"}},[r("code",[r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" mnemonic "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Mnemonic\n"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" m "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Mnemonic"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("'english'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" words "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" m"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("generate"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("strength"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("128")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" words\n"),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("u'olympic hard body window sibling used only mimic put sad ability bone'")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])]),t._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[t._v("1")]),r("br"),r("span",{staticClass:"line-number"},[t._v("2")]),r("br"),r("span",{staticClass:"line-number"},[t._v("3")]),r("br"),r("span",{staticClass:"line-number"},[t._v("4")]),r("br"),r("span",{staticClass:"line-number"},[t._v("5")]),r("br"),r("span",{staticClass:"line-number"},[t._v("6")]),r("br")])]),r("h3",{attrs:{id:"从助记词生成种子"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#从助记词生成种子"}},[t._v("#")]),t._v(" 从助记词生成种子")]),t._v(" "),r("p",[t._v("助记词生成之后我们可以通过密钥生成函数 "),r("strong",[t._v("PBKDF2")]),t._v(" 算法来生成种子。")]),t._v(" "),r("p",[r("strong",[t._v("PBKDF2")]),t._v(" 需要提供两个参数：助记词和盐（salt）。其中 salt 的目的就是增加破解难度，而在 BIP-39 中，我们可以引入密码（passphrase）来作为保护种子的附加安全因素。")]),t._v(" "),r("blockquote",[r("p",[t._v("PBKDF2 is part of RSA Laboratories’ Public-Key Cryptography Standards (PKCS) series, specifically PKCS #5 v2.0, also published as Internet Engineering Task Force’s RFC 2898.")])]),t._v(" "),r("p",[t._v("接着上面的助记词生成之后，如下图为生成 seed 的算法过程：")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://stevenocean.github.io/2018/09/23/generate-hd-wallet-by-bip39/generate-seed.jpg",alt:""}})]),t._v(" "),r("ol",{attrs:{start:"7"}},[r("li",[t._v("PBKDF2 的第一个参数是上面生成的助记词；")]),t._v(" "),r("li",[t._v("PBKDF2 的第二个参数就是 salt，一般有字符串和可选的用户提供的密码字符串连接组成；")]),t._v(" "),r("li",[t._v("PBKDF2 使用 HMAC-SHA512 算法，使用了 2048 次 Hash 之后产生一个 512 位的值作为种子；")])]),t._v(" "),r("p",[t._v("如下示例代码为基于上面示例中生成的助记词来生成种子：")]),t._v(" "),r("div",{staticClass:"language-python line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-python"}},[r("code",[r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" seed "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Mnemonic"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("to_seed"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("words"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hellobtc"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" seed\n"),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\xb8\\x94\\xc79\\xc6v\\x07VY:\\xfd\\xb9J\\x1d)\\xffu3\\x0c\\x1d\'\\xd1F\\xed\\xe5c{R\\xb9M\\xdbu+\\xdc\\xc3\\xb7\\xc34\\xe0\\x81\\xca\\x97\\x98W\\xcf\\xab\\xa6\\xa4c\\xf3\\xc9\\x1d\\xc0\\xee\\xd2\\xa2{\\xdaX+\\x82\\x14R\\xfa"')]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" base58"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b58encode"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("seed"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("'4h3QDYvyXEZRFeoCztcMybKH4aXkysTEmNqyDG2ZUyLTGvGwWUxXcEefCEB5JYjE8zuh2MSmLKsz9e8SQDpmzhuB'")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" base58"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b58encode_check"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("seed"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("'R9cTcYjTpLGZEKquHyv5MzyfQAEYyRzAFTd9dxqNhKqKCCKsxmwcy27qetTbK8zEZDzLSLf7AjF9L9cuWY6bZ4UGzZ3GQ'")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])]),t._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[t._v("1")]),r("br"),r("span",{staticClass:"line-number"},[t._v("2")]),r("br"),r("span",{staticClass:"line-number"},[t._v("3")]),r("br"),r("span",{staticClass:"line-number"},[t._v("4")]),r("br"),r("span",{staticClass:"line-number"},[t._v("5")]),r("br"),r("span",{staticClass:"line-number"},[t._v("6")]),r("br"),r("span",{staticClass:"line-number"},[t._v("7")]),r("br"),r("span",{staticClass:"line-number"},[t._v("8")]),r("br")])]),r("h1",{attrs:{id:"从种子开始生成-hd-钱包"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#从种子开始生成-hd-钱包"}},[t._v("#")]),t._v(" 从种子开始生成 HD 钱包")]),t._v(" "),r("p",[t._v("下面就将上面生成的种子作为 HD 钱包的根种子（root seed），任何 HD 钱包的根种子都可以重新创造整个 HD 钱包。")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://stevenocean.github.io/2018/09/23/generate-hd-wallet-by-bip39/generate-hd-master-key.jpg",alt:""}})]),t._v(" "),r("p",[t._v("将 root seed 输入到 HMAC-SHA512 算法中可以得到一个 512 位的 Hash，该 Hash 的左边 256 位作为 主私钥 m（Master Private Key），右边 256 位作为 主链码（Master Chain Code）。之后的 主公钥 M（Master Public Key，264 bits）可以通过 主私钥 m 生成。")]),t._v(" "),r("h3",{attrs:{id:"子密钥衍生函数-child-key-derivation-ckd"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#子密钥衍生函数-child-key-derivation-ckd"}},[t._v("#")]),t._v(" 子密钥衍生函数(Child Key Derivation, CKD)")]),t._v(" "),r("p",[t._v("如上所述，给定 Parent extended key 以及一个索引号(index)，就可以生成相应的 child extended key。")]),t._v(" "),r("p",[t._v("各个子层级的密钥生成规则如下图：")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://stevenocean.github.io/2018/09/23/generate-hd-wallet-by-bip39/hd-key-derivation-bip32.jpg",alt:""}})]),t._v(" "),r("p",[t._v("从上图可以看到，HD 的密钥生成如下几个参数：")]),t._v(" "),r("ul",[r("li",[r("em",[r("strong",[t._v("Parent Private Key")])]),t._v(" 或 "),r("em",[r("strong",[t._v("Parent Public Key")])]),t._v("；（均为未压缩的 256 bits 的 ECDSA 密钥）；")]),t._v(" "),r("li",[t._v("256 bits 的 "),r("em",[r("strong",[t._v("Parent Chain Code")])]),t._v("；")]),t._v(" "),r("li",[t._v("32-bit 整型的 "),r("em",[r("strong",[t._v("index number")])]),t._v("（索引号）；")])]),t._v(" "),r("blockquote",[r("p",[t._v("另外，上面的过程是可以递归下去的，图中的 "),r("em",[r("strong",[t._v("Child Private Key")])]),t._v(" 可以作为其下一层级的 "),r("em",[r("strong",[t._v("Parent Private Key")])]),t._v("。")])]),t._v(" "),r("p",[t._v("通过将 (Parent Publick Key, Parent Chain Code, Index Number) 输入至 HMAC-SHA512 算法中，我们就可以生成其子密钥，并且我们可以通过调整 Index Number 来生成同一层级的多个子密钥。")]),t._v(" "),r("h2",{attrs:{id:"关于扩展密钥-extended-key"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#关于扩展密钥-extended-key"}},[t._v("#")]),t._v(" 关于扩展密钥(extended key)")]),t._v(" "),r("p",[t._v("因为这个密钥衍生函数是单向的，所有 子密钥 都是不能够被用来推导出它们的 父密钥 的，也不能推导出同层级的 姊妹密钥 的，只有 父密钥 和 父链码（又是由 Parent 的 Parent 层级的 密钥 和 链码 生成） 可以推导出所有的 子密钥 和 子链码，后续也就可以生成相应的 子公钥 以及地址，并且用于对交易进行签名。")]),t._v(" "),r("p",[t._v("将 密钥 Key 和 Chain Code 结合起来称为 "),r("strong",[t._v("扩展密钥（extended key）")]),t._v("，可以通过 "),r("strong",[t._v("扩展密钥")]),t._v(" 来生成自其而下的所有分支。")]),t._v(" "),r("p",[r("strong",[t._v("扩展密钥")]),t._v(" 中提供的密钥可以为 私钥 或者 公钥，和 链码 结合起来分别称为 "),r("strong",[t._v("扩展私钥（extended private key）")]),t._v(" 和 "),r("strong",[t._v("扩展公钥（extended public key）")]),t._v("，并且分别记为 (k, c) 和 (K, c)，其中公钥 K = point(k)。")]),t._v(" "),r("p",[t._v("我们可以从 "),r("strong",[t._v("扩展私钥")]),t._v(" 推导出 "),r("strong",[t._v("扩展公钥")]),t._v("，而反之则不可以，因此对于某些交易场景（如电商），可以为每笔交易生成一个新的公钥和地址来收款，而扩展私钥可以被存储在纸质钱包或者硬件钱包中，用于安全的离线签署交易。可以看到 "),r("strong",[t._v("扩展公钥")]),t._v(" 的安全性相对高一些，下图为通过 扩展 父公钥 来衍生 子私钥进而生成子公钥 的传递机制：")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://stevenocean.github.io/2018/09/23/generate-hd-wallet-by-bip39/extend-pubkey.jpg",alt:""}})]),t._v(" "),r("blockquote",[r("p",[r("strong",[t._v("扩展密钥")]),t._v(" 也通过 Base58Check 进行编码，"),r("strong",[t._v("扩展私钥")]),t._v(" 和 "),r("strong",[t._v("扩展公钥")]),t._v(" 的编码分别以 "),r("strong",[t._v("xprv")]),t._v(" 和 "),r("strong",[t._v("xpub")]),t._v(" 作为前缀。")])]),t._v(" "),r("h2",{attrs:{id:"硬化衍生子密钥又是什么鬼"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#硬化衍生子密钥又是什么鬼"}},[t._v("#")]),t._v(" 硬化衍生子密钥又是什么鬼？")]),t._v(" "),r("p",[t._v("上面的 "),r("strong",[t._v("扩展密钥")]),t._v("（尤其是 "),r("strong",[t._v("扩展公钥")]),t._v("） 生成的钱包应该够安全的了，但是设计这一套钱包密钥生成算法的工程师觉得还不够：即使暴露了 "),r("strong",[t._v("扩展公钥")]),t._v("，也就是暴露了 "),r("strong",[t._v("子公钥")]),t._v(" 和 "),r("strong",[t._v("Chain Code")]),t._v("，但是如果哪天不小心，你那个 "),r("strong",[t._v("子私钥")]),t._v(" 也不小心泄露了，那么以这个 子密钥和 Chain Code 作为根的那棵树上挂着的所有的密钥也都能够被推导出来了，这TM太危险了（是的，你要是把你的 root seed 泄露了，估计够你哭三天三夜的~没币除外）。")]),t._v(" "),r("p",[t._v("然后 HD 钱包又提出来一种叫做 "),r("strong",[t._v("硬化衍生(hardened derivation)")]),t._v(" 的衍生函数，从上面 "),r("strong",[t._v("扩展公钥")]),t._v(" 生成的图中可以看到 子密钥 和 子链码 都是由 父公钥 和 父链码 通过 HMAC-SHA512 生成的（也都是相对比较容易“曝光”的），而 "),r("strong",[t._v("硬化衍生")]),t._v(" 函数将 父公钥 换成 父私钥 来推导出 子密钥 和 子链码，如下图：")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://stevenocean.github.io/2018/09/23/generate-hd-wallet-by-bip39/hardened_derivation.jpg",alt:""}})]),t._v(" "),r("ul",[r("li",[t._v("图上标识了 索引号码 根据 正常衍生 和 硬化衍生 不同，索引的范围不同，对于正常衍生的索引号范围为 [0x0, 0x7FFFFFFF]，而硬化衍生的索引号范围为 [0x80000000, 0xFFFFFFFF]；")]),t._v(" "),r("li",[t._v("硬化衍生的索引号太长，一般为了便于阅读，都是会将索引号右上角加上撇号，譬如：0x80000000 记为 0’，0x80000001 记为 1’，以此类推；")])]),t._v(" "),r("h2",{attrs:{id:"总结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),r("p",[t._v("针对 "),r("strong",[t._v("扩展密钥")]),t._v(" 的学习，可以看到有三种生成规则，分别如下：")]),t._v(" "),r("ol",[r("li",[t._v("Private parent key -> private child key")])]),t._v(" "),r("p",[t._v("即，从 父扩展私钥 和 父链码 计算生成 子扩展私钥 和 子链码。用公式表示就是：")]),t._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("CKDpriv((kpar, cpar), i) → (ki, ci)\n")])]),t._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[t._v("1")]),r("br")])]),r("ol",{attrs:{start:"2"}},[r("li",[t._v("Public parent key -> public child key")])]),t._v(" "),r("p",[t._v("即，从 父扩展公钥 和 父链码 计算生成 子扩展公钥 和 子链码。公式表示如下：")]),t._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("CKDpub((Kpar, cpar), i) → (Ki, ci)\n")])]),t._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[t._v("1")]),r("br")])]),r("ol",{attrs:{start:"3"}},[r("li",[t._v("Private parent key -> public child key")])]),t._v(" "),r("p",[t._v("即，从 父扩展私钥 和 父链码 计算生成 子扩展公钥 和 子链码。公式表示如下：")]),t._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("N((k, c)) → (K, c)\n")])]),t._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[t._v("1")]),r("br")])]),r("p",[t._v("下面是根据自己理解整理的 HD Wallet 的分层密钥生成结构图如下：")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://stevenocean.github.io/2018/09/23/generate-hd-wallet-by-bip39/generate-hd-wallet.jpg",alt:""}})]),t._v(" "),r("h1",{attrs:{id:"参考来源"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参考来源"}},[t._v("#")]),t._v(" 参考来源")]),t._v(" "),r("ul",[r("li",[r("p",[r("strong",[r("a",{attrs:{href:"https://github.com/bitcoinbook/bitcoinbook",target:"_blank",rel:"noopener noreferrer"}},[t._v("Master Bitcoin 2nd"),r("OutboundLink")],1)])])]),t._v(" "),r("li",[r("p",[r("strong",[r("a",{attrs:{href:"https://bitcoin.org/en/developer-guide",target:"_blank",rel:"noopener noreferrer"}},[t._v("Bitcoin developer guide"),r("OutboundLink")],1)])])]),t._v(" "),r("li",[r("p",[r("strong",[r("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[t._v("BIP-39 Mnemonic code for generating deterministic keys"),r("OutboundLink")],1)])])]),t._v(" "),r("li",[r("p",[r("strong",[r("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0033.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[t._v("BIP-32 Hierarchical Deterministic Wallets"),r("OutboundLink")],1)])])]),t._v(" "),r("li",[r("p",[r("strong",[r("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0043.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[t._v("BIP-43 Purpose Field for Deterministic Wallets"),r("OutboundLink")],1)])])]),t._v(" "),r("li",[r("p",[r("strong",[r("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[t._v("BIP-44 Multi-Account Hierarchy for Deterministic Wallets"),r("OutboundLink")],1)])])]),t._v(" "),r("li",[r("p",[r("strong",[r("a",{attrs:{href:"https://en.wikipedia.org/wiki/PBKDF2",target:"_blank",rel:"noopener noreferrer"}},[t._v("PBKDF2 - Password-Based Key Derivation Function 2"),r("OutboundLink")],1)])])]),t._v(" "),r("li",[r("p",[r("strong",[r("a",{attrs:{href:"https://en.wikipedia.org/wiki/HMAC",target:"_blank",rel:"noopener noreferrer"}},[t._v("HMAC - hash-based message authentication code"),r("OutboundLink")],1)])])]),t._v(" "),r("li",[r("p",[r("strong",[r("a",{attrs:{href:"https://tools.ietf.org/html/rfc4231",target:"_blank",rel:"noopener noreferrer"}},[t._v("Identifiers and Test Vectors for HMAC-SHA-224, HMAC-SHA-256, HMAC-SHA-384, and HMAC-SHA-512"),r("OutboundLink")],1)])])])]),t._v(" "),r("blockquote",[r("p",[t._v("Post author:** Steven Hu")]),t._v(" "),r("p",[r("strong",[t._v("Post link:")]),t._v(" "),r("a",{attrs:{href:"http://stevenocean.github.io/2018/09/23/generate-hd-wallet-by-bip39.html",title:"基于 BIP-32 和 BIP-39 规范生成 HD 钱包（分层确定性钱包）",target:"_blank",rel:"noopener noreferrer"}},[t._v("基于 BIP-32 和 BIP-39 规范生成 HD 钱包（分层确定性钱包） | 未来边缘"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("strong",[t._v("Copyright Notice:")]),t._v(" All articles in this blog are licensed under "),r("a",{attrs:{href:"https://creativecommons.org/licenses/by-nc-sa/4.0/",target:"_blank",rel:"noopener noreferrer"}},[t._v("CC BY-NC-SA 4.0"),r("OutboundLink")],1),t._v(" unless stating additionally.")])])])}),[],!1,null,null,null);e.default=a.exports}}]);